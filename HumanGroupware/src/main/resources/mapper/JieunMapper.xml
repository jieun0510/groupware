<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-/mybatis.org/DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="com.human.springboot.dao.JieunDAO">

<!-- 부서, 직급, 고용형태 옵션 불러오기 ( select )  -->
	<select id="department_select0" resultType="com.human.springboot.dto.DepartmentDTO">
		select dep_name, dep_parent,dep_id, dep_manager
			from department
	</select>
	<select id="position_select0" resultType="com.human.springboot.dto.PositionDTO">
		select distinct position_name from position
	</select>
	<select id="form_select0" resultType="com.human.springboot.dto.PositionDTO">
		select distinct job_type from position
	</select>
	<select id="attendance_employee0" resultType="com.human.springboot.dto.EmployeeDTO">
		select emp_name, emp_email from employee
	</select>
	<select id="exemploye_select1" resultType="com.human.springboot.dto.PositionDTO">
		select position_id from position where position_name=#{param1} and job_type=#{param2} 
	</select>
	<select id="exemployee_select2" resultType="com.human.springboot.dto.DepartmentDTO">
		select dep_id from department where dep_name = #{param1}
	</select>
<!-- 사원 정보 수정 ( update )-->
	<update id="employee_update0">
		update employee
			 set emp_join = #{param1}, emp_position = #{param2}, emp_depart = #{param3}
		 where emp_id = #{param4}
	</update>
	
<!-- 사원 조회 ( select ) -->
	<select id="employee_search" resultType="com.human.springboot.dto.EmpDepartPositionDTO">
		select a.emp_name, a.emp_gender, b.dep_name, c.position_name, c.job_type, a.emp_mobile, a.emp_email, a.emp_id, a.emp_img
			from employee a, department b, position c
		where a.emp_depart = b.dep_id and a.emp_position = c.position_id
		<if test='param1 !=null and param1 !=""'>
			AND a.emp_name like '%' || #{param1} ||'%'
		</if>
		<if test='param2 !=null and param2 !=""'>
			AND a.emp_mobile like '%' ||#{param2} ||'%'
		</if>
		<if test='param3 !=null and param3 !=""'>
			AND a.emp_email like '%' ||#{param3} ||'%'
		</if>
		<if test='param4 !=null and param4 !=""'>
			AND b.dep_name = #{param4}
		</if>
		<if test='param5 !=null and param5 !=""'>
			AND c.position_name = #{param5}
		</if>
	</select>
	
	<!-- 부서이름, 직원이름, 직급 불러오기 -->
	<select id="all_organization" resultType="com.human.springboot.dto.EmpDepartPositionDTO">
		select a.emp_name, b.dep_name, c.position_name
			from employee a, department b, position c
		where a.emp_depart = b.dep_id and a.emp_position = c.position_id
	</select>
	<!-- 부서장 명 불러오기 ( select ) -->
	<select id="dep_boss_name_select" resultType="com.human.springboot.dto.EmpDepartPositionDTO">
		select a.emp_no, a.emp_name, b.position_id, b.position_name, b.job_type
			from employee a, position b
		where a.emp_position = b. position_id
	</select>
	<!-- 직급 명 불러오기 ( select ) -->
	<select id = "position_name_select" resultType="com.human.springboot.dto.PositionDTO">
		select position_id, position_name, job_type
			from position order by position_name
	</select>
	<!-- 직급 삭제 ( delete ) -->
	<delete id="position_delete">
		delete position where position_id = #{param1}
	</delete>
	<!-- 직원별 근태현황 조회 ( select ) -->
	<select id="attendance_list" resultType="com.human.springboot.dto.EmpDepartPositionDTO">
		select a.emp_name, b.dep_name, c.position_name, d.start_time, d.end_time, d.night_time, d.tardy_time
			from employee a, department b, position c, attendance d
		where a.emp_depart = b.dep_id 
		   and a.emp_position = c.position_id 
		   and a.emp_no = d.emp_no
		   and d.attend_date = #{param1}
		<if test='param2 !=null and param2 !=""'>
			and b.dep_name = #{param2}
		</if>
	</select>
	<!-- 휴가 직원 조회 ( select ) -->
	<select id="leave_select_list" resultType="com.human.springboot.dto.EmpDepartPositionDTO">
		select a.emp_name, b.dep_name, c.position_name, d.leave_end
			from employee a, department b, position c, edms_leave d, edms f
		where f.edms_drafter = a.emp_no and f.edms_id = d.edms_id
          and a.emp_depart = b.dep_id and a.emp_position = c.position_id
		and d.leave_start = #{param1}
		and f.edms_status = '완료'
		<if test='param2 !=null and param2 !=""'>
			and b.dep_name = #{param2}
		</if>
	</select>
	
	<!-- 부서 생성 -->
	<insert id="department_insert">
		insert into department (dep_id, dep_name,dep_parent, dep_manager)
			values ( dep_id_seq.nextval, #{param1}, #{param2}, #{param3} )
	</insert>
	<!-- 직급 생성 -->
	<insert id = "position_insert">
		insert into position(position_id, position_name, job_type)
			values (position_id_seq.nextval, #{param1}, #{param2})
	</insert>
	<!-- 부서 삭제 -->
	<delete id="department_delete">
		delete department where dep_id = #{param1}
	</delete>
	
	<!-- 로그인된 직원 정보 ( select ) -->
	<select id="employeeData_select" resultType="com.human.springboot.dto.EmpDepartPositionDTO">
		select a.emp_no, a.emp_name, a.emp_join, a.emp_img, a.emp_mobile, a.emp_email, a.emp_id, b.position_name, b.job_type, b.position_id, c.dep_id, c.dep_name
			from employee a, position b, department c
		where emp_depart = dep_id and emp_position = position_id
			and emp_no = #{param1}
		
	</select>
	<select id= "name_select27" resultType="com.human.springboot.dto.EmpDepartPositionDTO">
		select a.emp_no, a.emp_name, b.position_name
			from employee a, position b
		where position_id = emp_position
	</select>
	
	<!-- 로그인 된 아이디의 고유번호 ( select ) -->
	<select id = "id_load_select" resultType = "com.human.springboot.dto.EmployeeDTO">
		select emp_no from employee where emp_id = #{param1}
	</select>
	
	<!-- 출근 입력 ( insert )-->
	<insert id= "attendance_start_id">
		insert into attendance (attend_id, emp_no, attend_date, start_time , end_time, night_time, tardy_time)
			values( attend_id_seq.nextval, #{param1}, to_char(sysdate, 'YYYY-MM-DD'), TO_CHAR(SYSDATE,'HH24:Mi:SS'),'-','-','-')
	</insert>
	<!-- 퇴근 입력 ( update )-->
	<update id="attendance_end_id">
		update attendance
		<set>
			<if test ='param1 == 1'>end_time = to_char(sysdate,'HH24:Mi:SS')</if>
			<if test = 'param1 == 2'>tardy_time = to_char(sysdate,'HH24:Mi:SS')</if>
			<if test ='param1 == 3'>night_time = to_char(to_date(#{param3},'HH24:MI:SS'),'HH24:MI:SS'), end_time = to_char(sysdate,'HH24:MI:SS'), tardy_time = '-'</if>
		</set>
		where emp_no = #{param2} and attend_date = to_char(sysdate, 'YYYY-MM-DD')
	</update>
	
	<!-- 출근 1회 제한 ( select ) -->
	<select id="attendance_chack" resultType="int">
		select count(*)
			from attendance
		where emp_no = #{param1} and attend_date = to_char(sysdate,'YYYY-MM-DD')
	</select>
	
</mapper>